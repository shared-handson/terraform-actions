# Terraformの環境設定を行う共通アクション
name: "Terraform Setup Composite Action"
description: "Sets up Terraform environment, including AWS auth, init, and format check."

inputs:
  aws-iam-role:
    description: "AWS IAM role to assume"
    required: true
  aws-tf-state-bucket:
    description: "S3 bucket for Terraform state"
    required: true
  gh-dc-usermap:
    description: "JSON string for mapping GitHub actor to Discord ID"
    required: true
  aws-region:
    description: "AWS region"
    required: false
    default: "ap-northeast-1"
  tf-version:
    description: "Terraform version"
    required: false
    default: "1.12.2"

outputs:
  # 後続のステップにDiscord-IDを渡す
  discord-id:
    description: "The mapped Discord user ID"
    value: ${{ steps.map_id.outputs.DC_ID }}

runs:
  using: "composite"
  steps:
    # リポジトリ名だけを取得
    - name: Get repository name without owner
      id: repo_name
      shell: bash
      run: echo "REPO_NAME=${GITHUB_REPOSITORY#*/}" >> "$GITHUB_ENV"

    # Github Actions起動したユーザーのマッピング
    - name: Map GitHub actor to Discord ID
      id: map_id
      shell: bash
      run: |
        DC_ID=$(echo '${{ inputs.gh-dc-usermap }}' | jq -r --arg GH_ID '${{ github.actor }}' '.[$GH_ID]')
        echo "::add-mask::$DC_ID"
        echo "DC_ID=$DC_ID" >> "$GITHUB_OUTPUT"

    # AWSのOIDC認証を設定
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.aws-iam-role }}
        aws-region: ${{ inputs.aws-region }}

    # Terraform CLIのセットアップ
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ inputs.tf-version }}

    # Terraformの初期化
    - name: Terraform Init
      shell: bash
      working-directory: terraform
      run: |
        terraform init \
          -backend-config="bucket=${{ inputs.aws-tf-state-bucket }}" \
          -backend-config="key=${{ env.REPO_NAME }}/terraform.tfstate" \
          -backend-config="region=${{ inputs.aws-region }}" \
          -backend-config="use_lockfile=true"

    # Terraformのフォーマットチェック
    - name: Terraform Format
      shell: bash
      working-directory: terraform
      run: terraform fmt -check
