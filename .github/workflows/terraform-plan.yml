name: "Terraform CI - plan"

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

permissions:
  id-token: write
  contents: read
  issues: write
  pull-requests: write

defaults:
  run:
    shell: bash

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      # AWS認証情報とTerraformバックエンド設定を環境変数として定義
      AWS_REGION: "ap-northeast-1"
      TF_VERSION: "1.12.2"

    steps:
      # リポジトリのコードをチェックアウト
      - name: Checkout
        uses: actions/checkout@v4

      # no_terraformファイルの存在チェック
      - name: Check No Terraform File
        id: check_no_terraform
        uses: ./.github/actions/check-no-terraform

      # 共通処理をComposite Actionで実行
      - name: Setup Terraform Environment
        id: setup
        uses: ./.github/actions/setup
        with:
          aws-iam-role: ${{ secrets.AWS_IAM_ROLE }}
          aws-tf-state-bucket: ${{ secrets.AWS_TF_STATE_BUCKET }}
          gh-dc-usermap: ${{ secrets.GH_DC_USERMAP }}
          aws-region: ${{ env.AWS_REGION }}
          tf-version: ${{ env.TF_VERSION }}

      # バックエンドS3の設定を確認
      - name: Check Backend
        id: check_backend
        continue-on-error: true
        working-directory: terraform
        run: |
          aws s3api head-bucket --bucket ${{ secrets.AWS_TF_STATE_BUCKET }}
          if [ ! -f ".terraform/terraform.tfstate" ]; then exit 1; fi
          if [ "$(jq -r '.backend.type' ".terraform/terraform.tfstate")" != "s3" ]; then exit 1; fi

      # (バックエンドチェック失敗時) Pull Request コメントに結果してクローズ
      - name: Handle Backend Check Failure
        if: steps.check_backend.outcome == 'failure'
        uses: ./.github/actions/pr-failure-handler
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          message: |
            ❌ **S3確認 : 失敗**
            ⚠️ このPRは現在マージできません。以下の問題を修正してください：

            ### 🔧 詳細
            以下のどれかが原因の可能性が高い
            - S3へ書き込みができない
            - S3が存在しない
            - ソースコードで \`backend "S3" {}\` を書いていない

      # Terraformのドライラン
      - name: Terraform Plan for PR
        id: plan
        continue-on-error: true
        working-directory: terraform
        run: |
          set +e
          OUTPUT=$(terraform plan -no-color -input=false 2>&1)
          PLAN_EXIT_CODE=$?
          {
            echo 'PLAN_OUTPUT<<EOF'
            echo "$OUTPUT"
            echo EOF
          } >> "$GITHUB_OUTPUT"
          exit $PLAN_EXIT_CODE

      # (バックエンドチェック失敗時) Pull Request コメントに結果してクローズ
      - name: Handle Terraform Plan Failure
        if: steps.plan.outcome == 'failure'
        uses: ./.github/actions/pr-failure-handler
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          message: |
            ❌ **terraform plan : 失敗**
            ⚠️ このPRは現在マージできません。以下の問題を修正してください：

            ### 🔧 詳細
            <details>
            <summary>Show terraform plan</summary>

            \`\`\`terraform
            ${{ steps.plan.outputs.PLAN_OUTPUT }}
            \`\`\`

            </details>

      # (成功時) Pull Request コメントに結果
      - name: PR Comment on Success
        if: steps.plan.outcome == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          MSG=$(cat <<EOF
          👍 **terraform plan : 成功**
          ✅ 正しく適用が可能です。内容は以下を確認してください。

          ### 🔧 詳細
          <details>
          <summary>Show terraform plan</summary>

          \`\`\`terraform
          ${{ steps.plan.outputs.PLAN_OUTPUT }}
          \`\`\`

          </details>
          EOF
          )
          gh pr comment ${{ github.event.pull_request.number }} --body-file <(echo "${MSG}")

      # (no_terraformファイル存在時) Apply無効化の警告コメント
      - name: PR Comment on No Terraform Warning
        if: steps.plan.outcome == 'success' && steps.check_no_terraform.outputs.no-terraform-found == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          MSG=$(cat <<EOF
          ⚠️ **Terraform Apply 無効化**
          🚫 \`${{ steps.check_no_terraform.outputs.no-terraform-file }}\` ファイルが検出されました。
          このPRがマージされても **Terraform apply は実行されません**。
          Apply を有効にするには、このファイルを削除してください。
          EOF
          )
          gh pr comment ${{ github.event.pull_request.number }} --body-file <(echo "${MSG}")
